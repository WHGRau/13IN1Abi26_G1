#BlueJ class context
comment0.params=pData\ pColumnNames\ pColumnTypes
comment0.target=QueryResult(java.lang.String[][],\ java.lang.String[],\ java.lang.String[])
comment0.text=\r\n\ Paketinterner\ Konstruktor.\r\n
comment1.params=
comment1.target=java.lang.String[][]\ getData()
comment1.text=\r\n\ Die\ Anfrage\ liefert\ die\ Eintraege\ der\ Ergebnistabelle\ als\ zweidimensionales\ Feld\r\n\ vom\ Typ\ String.\ Der\ erste\ Index\ des\ Feldes\ stellt\ die\ Zeile\ und\ der\ zweite\ die\ \r\n\ Spalte\ dar\ (d.h.\ Object[zeile][spalte]).\r\n
comment2.params=
comment2.target=java.lang.String[]\ getColumnNames()
comment2.text=\r\n\ Die\ Anfrage\ liefert\ die\ Bezeichner\ der\ Spalten\ der\ Ergebnistabelle\ als\ Feld\ vom\ \r\n\ Typ\ String\ zurueck.\r\n
comment3.params=
comment3.target=java.lang.String[]\ getColumnTypes()
comment3.text=\r\n\ Die\ Anfrage\ liefert\ die\ Typenbezeichnung\ der\ Spalten\ der\ Ergebnistabelle\ als\ Feld\ \r\n\ vom\ Typ\ String\ zurueck.\ Die\ Bezeichnungen\ entsprechen\ den\ Angaben\ in\ der\ MySQL-Datenbank.\r\n
comment4.params=
comment4.target=int\ getRowCount()
comment4.text=\r\n\ Die\ Anfrage\ liefert\ die\ Anzahl\ der\ Zeilen\ der\ Ergebnistabelle\ als\ Integer.\r\n
comment5.params=
comment5.target=int\ getColumnCount()
comment5.text=\r\n\ Die\ Anfrage\ liefert\ die\ Anzahl\ der\ Spalten\ der\ Ergebnistabelle\ als\ Integer.\r\n
numComments=6
